let arr1 = [3,4,2,1,3,3]
let arr2 = [4,3,5,3,9,3]


function sortArr(arr) {
    arr.sort(function(a, b){return a - b})
    return arr
}



function calcDiff(arr1, arr2) {
    console.log(arr1)
    console.log(arr2)
    let arr = []
    for (let i = 0; i< arr1.length; i++) {
        if (arr1[i]-arr2[i] < 0) {
            arr[i] = (arr1[i]-arr2[i])*-1
        } else {
            arr[i] = arr1[i]-arr2[i]
        }
    }
    let result = 0;
    arr.forEach(element => {
        result+=element
    })
    return result
}

let str = `61967\n56543
11022\n54992
21268\n29417
90452\n95846
90728\n95846
82351\n12878
40277\n58932
36981\n22944
93875\n53190
39283\n59850
39396\n34776
16395\n35328
32473\n10395
15028\n20276
31930\n65432
24773\n22172
40802\n97123
10909\n29189
23996\n60290
55260\n93875
93378\n76216
46284\n95037
41664\n15145
84475\n39021
52069\n55213
94827\n20473
79648\n48127
43947\n76411
20473\n71938
70251\n80695
13125\n65297
49246\n75802
49184\n15227
92091\n54909
31992\n41267
45911\n19856
93403\n97963
45807\n76216
61063\n41259
47907\n21322
15388\n15227
85798\n13686
60015\n50364
34294\n34597
14526\n70647
79498\n72002
76367\n46598
10763\n67546
53531\n88962
86158\n30240
48843\n20473
74127\n95846
29239\n39021
89243\n55213
42208\n52849
11396\n54168
51485\n54805
28347\n34661
32396\n55213
89137\n18330
84414\n55213
64013\n12511
50364\n62725
69550\n70382
75395\n47413
86240\n56543
22944\n56900
99262\n56543
70893\n48848
49889\n85195
41385\n85280
33498\n11649
53359\n11649
35483\n61686
15429\n34776
82878\n78142
71716\n76015
63677\n22034
38703\n71901
88599\n89560
34092\n19913
79849\n34661
86969\n51576
28571\n33019
26154\n22944
52835\n29417
53205\n77890
20276\n39461
82458\n50421
85308\n55213
23780\n34661
35311\n30488
42273\n63441
68289\n14174
53846\n48389
66984\n86158
69976\n83576
44223\n36234
40372\n27603
83168\n76216
60101\n62691
99675\n90166
70006\n84175
24063\n54443
54560\n10210
30011\n34776
77029\n26998
37798\n77700
69137\n77283
68787\n22650
93357\n39021
18050\n81124
78744\n18131
32059\n46598
21287\n42621
42292\n11649
99706\n11352
86307\n34948
53716\n41259
84440\n80333
39562\n66295
81493\n90431
64911\n41267
41829\n82797
33421\n55780
73962\n65004
70599\n48389
71389\n78405
56211\n96609
86614\n20276
60185\n18584
46519\n19856
85341\n21402
63706\n54396
99509\n19131
77048\n68330
47476\n41259
19677\n48389
21320\n22944
98668\n67439
77246\n41489
20072\n31880
63382\n27469
86557\n20276
80371\n51645
24256\n21964
53783\n49002
36807\n85389
98394\n82801
95346\n86158
10431\n85065
98843\n95846
18651\n63897
10144\n65443
49483\n34856
72449\n30766
94011\n91054
11029\n24754
36006\n54821
18459\n65297
52537\n10646
58677\n95846
52571\n24400
45008\n53241
84084\n59701
63723\n65432
41397\n25462
66176\n94916
37821\n87108
10786\n81993
43825\n48389
59143\n99924
55219\n45778
53780\n75436
52820\n46104
23497\n84939
88371\n58423
41259\n37181
22603\n76216
99333\n15881
96990\n19856
56662\n49575
54876\n67245
25213\n78142
24559\n78821
58907\n68881
14836\n15227
22463\n68881
52592\n29417
39763\n40027
28925\n62885
74177\n38729
58731\n56543
86958\n26033
50538\n25025
18993\n10013
80692\n56917
27924\n43417
57696\n84166
66253\n34776
27631\n43340
66106\n94016
95853\n48244
70430\n82286
23027\n26092
56532\n95846
67501\n45349
12215\n41267
19720\n50585
96226\n45042
74000\n27047
62451\n32342
31717\n76164
45992\n51137
41345\n62978
58818\n89347
49405\n34661
71577\n69710
54334\n20032
23609\n78142
34661\n25224
15665\n41259
69935\n21666
30320\n10215
47745\n22944
16919\n79188
90987\n50880
43151\n35249
56543\n85280
31607\n43137
50565\n96043
76216\n53795
31299\n74160
12068\n52582
34212\n25224
59157\n27762
49371\n80778
12067\n34054
84925\n15227
94050\n15227
16313\n95846
45020\n76657
96730\n50985
35597\n80727
15922\n86678
72237\n15949
19348\n91593
22493\n50364
81453\n36932
63469\n31880
83204\n44281
97516\n76216
29851\n85280
83853\n50364
22722\n65432
44826\n11286
78112\n61461
34712\n11649
77566\n63897
89300\n56543
84751\n22250
17748\n34661
26317\n65297
93586\n85526
93545\n46598
80829\n92121
31655\n65297
70888\n19856
78658\n67271
19856\n34776
39960\n56479
61689\n39021
70480\n50390
55500\n21322
43674\n65945
17507\n21322
37527\n60767
46386\n25187
26815\n49575
84007\n56865
88175\n51137
36052\n48389
59939\n53813
72268\n65297
81352\n61501
16822\n68881
36521\n85280
34361\n99506
63695\n86158
98179\n63897
84080\n95846
35952\n25224
63718\n16985
47260\n21322
32958\n86125
46871\n95846
84506\n62971
22962\n87402
44900\n74111
79913\n81638
83540\n20473
90341\n89847
17097\n75291
95448\n11649
10951\n65297
66309\n43216
71201\n15227
52481\n62912
21951\n51137
22464\n62319
10029\n63499
78832\n76216
98333\n11649
40894\n68881
52946\n19856
50329\n14803
29823\n39056
76686\n20473
83170\n26188
53459\n68881
13042\n33617
78116\n60418
48212\n51137
92069\n88727
57787\n34115
73872\n25224
50550\n18671
97638\n62724
41131\n65597
84806\n55213
94592\n31880
71180\n41259
92360\n97729
98620\n62980
34471\n52669
91532\n20276
35790\n61616
75503\n15748
75074\n21322
11737\n41127
77602\n25224
94166\n11649
11580\n58318
33589\n65023
28957\n41259
48071\n85280
46598\n71087
36777\n62347
60594\n20473
81800\n83420
31339\n40736
16207\n47305
23624\n48389
41126\n73202
95465\n44217
73513\n58171
48492\n34661
27319\n65297
15520\n19856
48278\n74391
42528\n42241
21889\n96386
61833\n19076
13142\n93210
19905\n15227
64895\n13547
15908\n78271
20442\n55213
33221\n50364
78895\n40466
56182\n97639
40093\n14980
85157\n26820
36540\n96113
56873\n49315
39565\n30340
93297\n49684
43957\n63789
63897\n50409
69723\n58764
26167\n17686
78216\n51576
66527\n84415
51137\n19856
36635\n56543
59257\n93611
80851\n26970
21322\n36633
60017\n19856
74310\n12230
54464\n85280
74537\n55813
55344\n19856
19176\n41267
31914\n76216
77455\n80335
34039\n39669
35118\n89909
65432\n74023
37950\n11649
36603\n62501
52464\n46856
32342\n72736
89467\n63318
98246\n67207
15075\n17421
76916\n74263
92157\n95846
31880\n43080
45051\n13900
91452\n67550
68619\n90797
54105\n39021
33071\n72624
63784\n57575
67379\n49283
38131\n29417
57202\n55213
21615\n56543
90526\n46598
96898\n65297
49860\n34661
74266\n93975
21484\n44229
66643\n68881
16715\n84749
90512\n73621
89388\n16965
94053\n36641
35962\n65432
29763\n47174
14745\n77272
34993\n34661
83014\n11649
60837\n92670
15494\n20473
47055\n93024
12035\n36814
49721\n39021
26438\n39677
21933\n19856
16148\n40828
87391\n68949
56399\n22506
48696\n72022
95549\n10092
18684\n52865
44990\n21322
77310\n19856
35505\n83623
89352\n74555
86186\n55213
23227\n94800
37067\n34776
74039\n42442
53442\n92091
85527\n55213
64005\n63897
60463\n60857
84190\n19303
11722\n99564
47545\n20473
50423\n25224
19300\n13219
11549\n88441
41246\n56543
64539\n21322
16656\n21331
81984\n29417
21166\n65297
27236\n27913
73250\n22933
14078\n21480
86888\n37494
60623\n68881
56818\n25224
92340\n28382
72247\n42211
19198\n85280
29546\n52039
44394\n65297
14866\n21610
67444\n21322
85995\n96825
71932\n38843
99764\n34776
79024\n43841
59707\n89498
45503\n87250
83594\n96789
85277\n55213
32640\n95846
27823\n23982
28543\n31399
33759\n95846
23087\n91530
93094\n93695
88151\n82097
53506\n17212
61712\n63975
69833\n45914
19987\n60322
68648\n28755
15919\n34380
76804\n90603
83622\n39021
89705\n46485
29860\n58935
58392\n78957
26149\n17889
19305\n89821
88282\n17673
14085\n75808
78937\n41259
75320\n64962
84453\n21322
29476\n94656
84039\n41267
84385\n11391
39529\n52865
63057\n23532
37397\n56543
39202\n19856
90160\n15799
20310\n22944
40937\n41267
44029\n91325
50399\n34661
83445\n39021
58878\n60759
87071\n87733
44142\n46155
71837\n82441
74478\n86781
68295\n50364
94162\n65432
69323\n97655
63974\n61934
39245\n98569
13669\n47701
44744\n34661
75459\n50364
88291\n55213
99416\n11649
36887\n85280
29988\n45252
97663\n76216
35645\n26140
78021\n85280
67424\n69456
72759\n79790
33820\n20473
95942\n39872
81333\n85280
40810\n61461
69479\n32816
15379\n24034
11921\n13179
52719\n54900
20410\n63897
97887\n15408
40546\n43910
44053\n49808
90572\n60565
80385\n78142
40458\n95846
92895\n29481
30189\n84413
52865\n69499
19745\n52865
50975\n49392
89519\n73695
86176\n38188
47604\n62257
67436\n29417
11296\n82182
85459\n91364
27362\n38039
10585\n59869
46438\n22944
44742\n35866
85280\n16513
21227\n81727
16973\n32676
47127\n68881
98849\n68881
38328\n21322
12186\n31773
13799\n71462
13565\n51576
29848\n45510
76548\n86158
67804\n56543
55213\n88508
88481\n12489
13389\n41259
25035\n88404
50679\n51137
13786\n85280
50406\n11649
38054\n89777
79568\n24534
24756\n85373
93482\n86158
43790\n79276
60250\n83576
43730\n21322
87160\n36323
88807\n61112
97993\n89540
44262\n89194
82245\n85280
40413\n96894
56866\n55804
27892\n93799
15314\n52111
23042\n60143
97060\n89497
58200\n19325
27659\n67004
89411\n22944
87316\n89489
19976\n37593
38865\n11649
45078\n24406
36358\n55213
45579\n35021
99402\n73275
40782\n20276
48389\n34465
61983\n65432
46549\n71333
60731\n50364
28239\n82886
37245\n84331
89695\n72707
45702\n35310
46936\n95846
31661\n65432
63867\n34661
22578\n46504
35924\n99928
97445\n95928
60411\n48389
36833\n68881
10278\n50364
39206\n34776
95474\n94852
15159\n45432
90288\n95481
77881\n30096
56304\n62251
49910\n81451
13678\n21322
42650\n94971
75244\n74862
77750\n74920
54566\n50186
92641\n49575
23566\n81405
39983\n70620
82218\n31880
95885\n58807
97444\n40125
86195\n35943
34776\n68881
20384\n76109
91857\n44727
59888\n33738
47992\n61640
50291\n53340
59747\n40258
98077\n68881
11930\n29301
52116\n44318
96256\n77071
75365\n39021
14830\n29417
34876\n92947
48613\n17514
43229\n85569
15955\n72245
61458\n76216
74993\n61461
97198\n63897
66233\n56543
92861\n80868
22888\n50889
11649\n15227
72510\n44999
60024\n46310
51981\n78952
30134\n85280
15153\n48389
32013\n53946
14541\n27325
54878\n19856
12630\n51576
12646\n63897
68382\n76216
40855\n21322
31477\n99082
94979\n10843
82341\n87920
35488\n41259
57823\n99959
90928\n54338
91407\n51576
81221\n22944
55919\n42682
27235\n95483
68881\n73120
21359\n46598
59534\n46435
91806\n50364
42497\n15227
57049\n12517
76929\n26842
76110\n68881
78586\n39021
51225\n65432
87650\n93875
48080\n35764
68282\n80266
23715\n24411
62383\n46689
35851\n38657
48668\n35985
57008\n42062
44396\n52990
97855\n71998
35578\n28469
22235\n56010
70948\n68881
77965\n73892
15973\n14537
35328\n85469
94454\n46598
62384\n19856
78071\n20276
88122\n86158
88105\n68881
77090\n23412
11822\n55213
31989\n39118
68039\n65297
81126\n55174
43631\n32060
11917\n11649
11974\n29417
62698\n41674
64496\n28711
33691\n73796
92195\n66727
11682\n20677
65996\n79079
92131\n95846
44640\n25224
62049\n65297
67359\n34661
63094\n29497
24813\n67897
41267\n38839
13278\n56543
71572\n12828
80808\n78142
56156\n95846
51530\n89113
75797\n63897
93988\n35495
30272\n68056
31629\n16046
17562\n34661
34072\n96205
43904\n62359
83398\n49834
28423\n97195
82852\n90842
49810\n31220
66513\n50188
27911\n45688
56971\n20473
22800\n78142
86334\n41267
93393\n11649
84601\n71534
86633\n79250
60407\n78142
85126\n53116
74638\n36062
20964\n71314
82352\n36930
83394\n29417
65297\n11649
10164\n29082
15227\n76216
95846\n48389
91167\n80269
72154\n47261
71176\n19856
75281\n65297
51576\n50364
89997\n24184
53631\n65432
24704\n25224
39021\n21322
64838\n19091
76401\n48512
13948\n34578
33099\n63897
94777\n12300
59825\n51487
96739\n30997
41555\n48028
12667\n15227
16397\n51137
74081\n58852
53928\n55213
34791\n42483
29417\n27352
87524\n89512
25224\n76216
47202\n25224
30915\n34551
79149\n89897
92898\n72170
84546\n19856
63881\n22611
65227\n85280
68664\n11649
13738\n11834
48100\n20473
31647\n12357
58285\n82005
38498\n61310
17399\n29417
53470\n56543
94488\n41267
55069\n51137
65843\n12011
86089\n21427
98998\n69258
93772\n50364
61461\n21322
32797\n20276
63534\n45983
42044\n68881
49575\n49268
89725\n71824
13151\n55213
47235\n50474
70742\n41267
69846\n83201
49984\n45584
70773\n16704
41907\n58931
80020\n78319
38557\n41267
59468\n17081
24017\n20360
83576\n26453
44100\n42968
32619\n97934
95538\n95846
10470\n41259
40765\n22806
84349\n19856
31770\n75551
63239\n76216
22175\n31938
50014\n51673
18008\n84899
98253\n72600
38935\n22946
94044\n29417
12440\n63667
71981\n22652
35876\n56543
13131\n22143
78690\n34776
27878\n11370
19659\n34776
64979\n50364
89717\n30357
71844\n92010
26402\n90514
78750\n74617
53297\n22944
49589\n50364
16296\n69699
46311\n74647
83938\n50477
73500\n84604
38665\n68881
62321\n73263
79989\n10191
81079\n63922
19186\n15227
89155\n56543
90154\n27651
36567\n65164
95351\n20473
73278\n40535
47097\n19856
62480\n41267
51246\n25224
94838\n27133
98878\n22911
73123\n91366
21914\n67909
87431\n81551
27032\n15227
15090\n61123
13350\n98688
37173\n58301
92022\n11981
66900\n26049
18381\n10986
75360\n15227
69620\n79680
18780\n60264
84878\n68881
15467\n33806
71799\n58322
47180\n19679
39054\n92091
29531\n94509
62925\n70352
99943\n51998
64891\n75738
88061\n20473
98252\n59643
12766\n64598
38349\n30817
50824\n41267
47031\n97828
82027\n46701
59404\n40860
88020\n78142
83250\n72893
37738\n53309
85272\n34122
57713\n65432
56624\n78571
10906\n55213
42778\n39021
56224\n59056
71584\n44879
42348\n55213
53434\n75449
78142\n14981
40177\n28988
54053\n68881
66277\n69900
35127\n50364
54463\n21098
21554\n87868
89672\n76216
95148\n82149
74621\n76216
40237\n20473
10257\n20473
70014\n41883
42436\n41267
59460\n71093
57487\n15227
65720\n91317
98718\n92080
88722\n21322
63630\n26854
49789\n89200
96784\n20473
30583\n20473
41407\n56714
86109\n34661
13834\n44624
19298\n44781
67868\n48389
73954\n14305
78878\n48389
99934\n63566
53524\n51137
77891\n26553
98684\n68881
28112\n38511
80455\n33657
45447\n51355
77158\n75485
16208\n55213
37619\n41978
77064\n20473
38184\n80480
57747\n89791
88771\n29417
78861\n95846
87502\n11649
31852\n98307
50648\n47711
23961\n34661
96913\n79564`

a = str.split("\n")
let array1 = []
let array2 = []
for (let i = 0; i < a.length; i++) {
    if (i%2 == 0) {
        array1.push(a[i])
    } else {
        array2.push(a[i])
    }
}
console.log("eliott doit trouver", calcDiff(sortArr(arr1), sortArr(arr2)))
console.log("eliott doit trouver",calcDiff(sortArr(array1), sortArr(array2)))

//console.log(arr1)
//console.log(arr2)



function calcSimilarity(arr1,arr2) {
    let simArr = []
    for (let a=0; a< arr1.length; a++) {
        //console.log("cheching", arr1[a])
        let simCount = 0;
        for( let y =0; y< arr2.length; y++) {
            //console.log("in", arr2[y])
            if (arr1[a] === arr2[y]) {
                //console.log("plus")
                simCount++
            }
        }
        simArr.push(simCount*arr1[a])
    }
    let result = 0;
    simArr.forEach(element => {
        result+=element
    })
    return result
}
console.log(calcSimilarity(arr1, arr2))

console.log(calcSimilarity(array1, array2))